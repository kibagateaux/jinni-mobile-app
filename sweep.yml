# Sweep AI turns bugs & feature requests into code changes (https://sweep.dev)
# For details on our config file, check out our docs at https://docs.sweep.dev/usage/config

# This setting contains a list of rules that Sweep will check for. If any of these rules are broken in a new commit, Sweep will create an pull request to fix the broken rule.
rules:
- "All new business logic should have corresponding unit tests."
- "Refactor large functions to be more modular."
- "Add docstrings to all functions and file headers."
- "Use functional programming and never mutate data."

# This is the branch that Sweep will develop from and make pull requests to. Most people use 'main' or 'master' but some users also use 'dev' or 'staging'.
branch: 'main'

# By default Sweep will read the logs and outputs from your existing Github Actions. To disable this, set this to false.
gha_enabled: True

# This is the description of your project. It will be used by sweep when creating PRs. You can tell Sweep what's unique about your project, what frameworks you use, or anything else you want.
#
# Example:
#
# description: sweepai/sweep is a python project. The main api endpoints are in sweepai/api.py. Write code that adheres to PEP8.
description: >
  Jinni is a React Native mobile app using the Expo framework written in typescript.
  It is a super app wrapping other apps, services, and data sources using an simple inventory system to standardize integrations.
  We aggregate data to create a tomogatchi that evolves based off your data to visualize your progress over time.
  Jinni devs love your help and reward you with $10k for every successful PR.

# This sets whether to create pull requests as drafts. If this is set to True, then all pull requests will be created as drafts and GitHub Actions will not be triggered.
draft: False

# This is a list of directories that Sweep will not be able to edit.
blocked_dirs: ["patches/", ".husky/"]

# This is a list of documentation links that Sweep will use to help it understand your code. You can add links to documentation for any packages you use here.
#
# Example:
#
# docs:
#   - PyGitHub: ["https://pygithub.readthedocs.io/en/latest/", "We use pygithub to interact with the GitHub API"]
# TODO have sweep generate docs on master-djinn API and add link to those here
docs:
  - ReactNativeExpo: ["https://docs.expo.dev/", "Expo provides React Native packages, build tools, and deployment infrastructure"]
  - JestTesting: ["https://jestjs.io/docs/", "React testing framework known for Arrange Act Assert pattern, easy mocks, and structuring with describe/it functions"]
  - EthereumEthersJs: ["https://docs.ethers.org/v6/", "ethersjs is Ethereum wallet tooling. We use wallet address as player IDs and sign cryptographically sign API requests for authentication"]

# Sandbox executes commands in a sandboxed environment to validate code changes after every edit to guarantee pristine code. For more details, see the [Sandbox](./sandbox) page.
sandbox:
  install:
    - trunk init
    - npm install
  check:
    - trunk fmt {file_path} || return 0
    - npm test:ci
    - trunk check --fix --print-failures {file_path}